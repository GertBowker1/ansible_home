---
- name: Perform Leap Upgrade of Oracle Linux
  hosts: all
  become: yes
  become_user: root
  gather_facts: True
  pre_tasks:

    - name: Disable all repos
      command: yum-config-manager --disable \*

    - name: Set correct domain
      lineinfile:
        path: /etc/yum.repos.d/*.repo
        regexp: 'ocidomain'
        line: 'oracle.com'
        create: yes
      
    - name: Enable ol8_baseos_latest
      command: yum-config-manager --enable ol8_baseos_latest
      
    - name: Enable ol8_appstream
      command: yum-config-manager --enable ol8_appstream      
 
 #   - name: Enable leapp repo
 #     command: yum-config-manager --add-repo=http://yum.oracle.com/repo/OracleLinux/OL7/leapp/x86_64/

    - name: Ensure SELinux is set to disabled
      lineinfile:
        path: /etc/selinux/config
        regexp: '^SELINUX='
        line: 'SELINUX=disabled'
        create: yes
        
    - name: Disable and stop SSSD
      service:
        name: sssd 
        state: stopped
      ignore_errors: true
        
    - name: Clean Cache
      command: yum clean all

    - name: CRemove Yum Cache
      command: rm -rf /var/cache/yum/

    - name: Disable GPG check globally in /etc/yum.conf
      lineinfile:
        path: /etc/yum.conf
        regexp: '^gpgcheck'
        line: 'gpgcheck=0'
        create: yes

    - name: Update all current packages to the latest version
      dnf:
        name: "*"
        state: latest
      when: ansible_distribution_major_version == "8"

    - name: Install Oracle Linux 8 Leapp tool (for OL7 to OL8 upgrade)
      yum:
        name: leapp
        state: present
      when: ansible_distribution_major_version == "7"

    - name: Run Leapp pre-upgrade check
      command: leapp preupgrade
      when: ansible_distribution_major_version == "7"

    - name: Check for pre-upgrade results
      command: leapp answer --yes
      when: ansible_distribution_major_version == "7"
      
    - name: Start the upgrade (if everything is ready)
      command: leapp upgrade
      when: ansible_distribution_major_version == "7"

    - name: Reboot the system for the upgrade to complete
      reboot:
        reboot_timeout: 600
        test_command: whoami
      when: ansible_distribution_major_version == "7"

    - name: Clean up after the upgrade
      command: leapp postupgrade
      when: ansible_distribution_major_version == "7"

    - name: Final cleanup and remove any unnecessary packages
      dnf:
        name: "*"
        state: latest
        autoremove: yes
      when: ansible_distribution_major_version == "8"
